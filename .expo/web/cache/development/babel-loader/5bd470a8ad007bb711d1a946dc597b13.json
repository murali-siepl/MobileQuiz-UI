{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AUTHENTICATE, LOGOUT, SET_LOADING } from \"../constants/Authenticate\";\nimport { config } from \"./../../helpers/config\";\nimport { DID_TRY_LOGIN } from \"./../constants/Authenticate\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ErrorModal from \"./../../components/shared/ErrorModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nexport var didTryLogin = function didTryLogin() {\n  return {\n    type: DID_TRY_LOGIN\n  };\n};\nexport var authenticate = function authenticate(token, userId, email, name) {\n  return {\n    type: AUTHENTICATE,\n    token: token,\n    userId: userId,\n    email: email,\n    name: name\n  };\n};\nexport var setLoading = function setLoading() {\n  return {\n    type: SET_LOADING\n  };\n};\nexport var logout = function logout() {\n  AsyncStorage.removeItem(\"userData\");\n  return {\n    type: LOGOUT\n  };\n};\nexport var signInOrUp = function signInOrUp(values, route) {\n  return function _callee(dispatch) {\n    var requestOptions, response, error, responseData, token, userId, email, name;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(setLoading());\n            requestOptions = Headers(values);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(config.api_url + \"/\" + route, requestOptions));\n\n          case 5:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            error = _context.sent;\n            throw new Error(error.message);\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 13:\n            responseData = _context.sent;\n            token = responseData.token, userId = responseData.userId, email = responseData.email, name = responseData.name;\n            saveDataToStorage(token, userId, email, name);\n            dispatch(authenticate(token, userId, email, name));\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            ErrorModal(_context.t0);\n\n          case 23:\n            dispatch(setLoading());\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 19]], Promise);\n  };\n};\nexport var forgetPassword = function forgetPassword(values, navigation) {\n  return function _callee2(dispatch) {\n    var requestOptions, response, error, responseData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch(setLoading());\n            requestOptions = Headers(values);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch(config.api_url + \"/forgetPassword\", requestOptions));\n\n          case 5:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            error = _context2.sent;\n            throw new Error(error.message);\n\n          case 11:\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 13:\n            responseData = _context2.sent;\n            console.log(responseData);\n            navigation.navigate(\"Reset\", {\n              email: values.email\n            });\n            _context2.next = 22;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0);\n            ErrorModal(_context2.t0);\n\n          case 22:\n            dispatch(setLoading());\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 18]], Promise);\n  };\n};\nexport var resetPassword = function resetPassword(values, navigation, mode) {\n  return function _callee3(dispatch) {\n    var requestOptions, response, error, responseData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(setLoading());\n            requestOptions = Headers(values);\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(fetch(config.api_url + \"/resetPassword\", requestOptions));\n\n          case 5:\n            response = _context3.sent;\n\n            if (response.ok) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            error = _context3.sent;\n            throw new Error(error.message);\n\n          case 11:\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 13:\n            responseData = _context3.sent;\n\n            if (!(mode === \"resend\")) {\n              _context3.next = 17;\n              break;\n            }\n\n            Alert.alert(\"Otp sent to your mail\", \"please check\", [{\n              text: \"ok\"\n            }]);\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            Alert.alert(\"Reset Password is successful\", \"please login\", [{\n              text: \"Login\",\n              onPress: function onPress() {\n                navigation.navigate(\"SignIn\");\n              }\n            }]);\n            _context3.next = 24;\n            break;\n\n          case 20:\n            _context3.prev = 20;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.log(_context3.t0);\n            ErrorModal(_context3.t0);\n\n          case 24:\n            dispatch(setLoading());\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 20]], Promise);\n  };\n};\n\nvar Headers = function Headers(values) {\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    body: JSON.stringify(values)\n  };\n};\n\nvar saveDataToStorage = function saveDataToStorage(token, userId, email, name) {\n  AsyncStorage.setItem(\"userData\", JSON.stringify({\n    token: token,\n    userId: userId,\n    email: email,\n    name: name\n  }));\n};","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/store/actions/Authenticate.js"],"names":["AUTHENTICATE","LOGOUT","SET_LOADING","config","DID_TRY_LOGIN","AsyncStorage","ErrorModal","useNavigation","didTryLogin","type","authenticate","token","userId","email","name","setLoading","logout","removeItem","signInOrUp","values","route","dispatch","requestOptions","Headers","fetch","api_url","response","ok","json","error","Error","message","responseData","saveDataToStorage","console","log","forgetPassword","navigation","navigate","resetPassword","mode","Alert","alert","text","onPress","method","headers","body","JSON","stringify","setItem"],"mappings":"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","sourcesContent":["import { AUTHENTICATE, LOGOUT, SET_LOADING } from \"../constants/Authenticate\";\r\nimport { config } from \"./../../helpers/config\";\r\nimport { DID_TRY_LOGIN } from \"./../constants/Authenticate\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport ErrorModal from \"./../../components/shared/ErrorModal\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Alert, Modal } from \"react-native\";\r\n\r\nexport const didTryLogin = () => {\r\n  return { type: DID_TRY_LOGIN };\r\n};\r\n\r\nexport const authenticate = (token, userId, email, name) => {\r\n  return { type: AUTHENTICATE, token, userId, email, name };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_LOADING };\r\n};\r\n\r\nexport const logout = () => {\r\n  AsyncStorage.removeItem(\"userData\");\r\n  return { type: LOGOUT };\r\n};\r\n\r\nexport const signInOrUp = (values, route) => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading());\r\n    const requestOptions = Headers(values);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        config.api_url + \"/\" + route,\r\n        requestOptions\r\n      );\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n      const responseData = await response.json();\r\n      const { token, userId, email, name } = responseData;\r\n      saveDataToStorage(token, userId, email, name);\r\n      dispatch(authenticate(token, userId, email, name));\r\n    } catch (e) {\r\n      console.log(e);\r\n\r\n      ErrorModal(e);\r\n    }\r\n    dispatch(setLoading());\r\n  };\r\n};\r\n\r\nexport const forgetPassword = (values, navigation) => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading());\r\n\r\n    const requestOptions = Headers(values);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        config.api_url + \"/forgetPassword\",\r\n        requestOptions\r\n      );\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      navigation.navigate(\"Reset\", { email: values.email });\r\n    } catch (e) {\r\n      console.log(e);\r\n      ErrorModal(e);\r\n    }\r\n    dispatch(setLoading());\r\n  };\r\n};\r\nexport const resetPassword = (values, navigation, mode) => {\r\n  return async (dispatch) => {\r\n    dispatch(setLoading());\r\n\r\n    const requestOptions = Headers(values);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        config.api_url + \"/resetPassword\",\r\n        requestOptions\r\n      );\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n      const responseData = await response.json();\r\n      if (mode === \"resend\") {\r\n        Alert.alert(\"Otp sent to your mail\", \"please check\", [\r\n          {\r\n            text: \"ok\",\r\n          },\r\n        ]);\r\n        return;\r\n      }\r\n      Alert.alert(\"Reset Password is successful\", \"please login\", [\r\n        {\r\n          text: \"Login\",\r\n          onPress: () => {\r\n            navigation.navigate(\"SignIn\");\r\n          },\r\n        },\r\n      ]);\r\n    } catch (e) {\r\n      console.log(e);\r\n      ErrorModal(e);\r\n    }\r\n    dispatch(setLoading());\r\n  };\r\n};\r\n//////////////    HELPER FUNCTIONS   //////////////////////////////\r\nconst Headers = (values) => {\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    body: JSON.stringify(values),\r\n  };\r\n};\r\n\r\nconst saveDataToStorage = (token, userId, email, name) => {\r\n  AsyncStorage.setItem(\r\n    \"userData\",\r\n    JSON.stringify({\r\n      token,\r\n      userId,\r\n      email,\r\n      name,\r\n    })\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}