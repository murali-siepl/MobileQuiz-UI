{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { myQuiz } from \"../../dummy-data/dashboard\";\n\nvar MyQuiz = function MyQuiz(props) {\n  var navigation = useNavigation();\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableNativeFeedback, {\n      onPress: function onPress() {\n        navigation.navigate(\"Instructions\");\n      }\n    }, React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.item), {\n        backgroundColor: item.color\n      })\n    }, React.createElement(Text, {\n      style: styles.text\n    }, item.subject), React.createElement(Text, {\n      style: styles.text\n    }, \"quiz \", item.number)));\n  };\n\n  return React.createElement(FlatList, {\n    numColumns: 2,\n    data: myQuiz,\n    keyExtractor: function keyExtractor(Item) {\n      return Item.color;\n    },\n    renderItem: renderItem\n  });\n};\n\nexport default MyQuiz;\nvar styles = StyleSheet.create({\n  item: {\n    height: 150,\n    flex: 1,\n    margin: 5,\n    borderRadius: 10,\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 25,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/components/DashboardComponents/MyQuiz.js"],"names":["useNavigation","React","FlatList","myQuiz","MyQuiz","props","navigation","renderItem","item","navigate","styles","backgroundColor","color","text","subject","number","Item","StyleSheet","create","height","flex","margin","borderRadius","padding","alignItems","justifyContent","fontSize","fontWeight"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,MAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AACA,MAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WACjB,oBAAC,uBAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbF,QAAAA,UAAU,CAACG,QAAX,CAAoB,cAApB;AACD;AAHH,OAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,kCAAOC,MAAM,CAACF,IAAd,GAAuB;AAAEG,QAAAA,eAAe,EAAEH,IAAI,CAACI;AAAxB,OAAvB;AAAX,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,OAA2BL,IAAI,CAACM,OAAhC,CADF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACG;AAApB,gBAAgCL,IAAI,CAACO,MAArC,CAHF,CALF,CADiB;AAAA,GAAnB;;AAaA,SACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,IAAI,EAAEZ,MAFR;AAGE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUA,IAAI,CAACJ,KAAf;AAAA,KAHhB;AAIE,IAAA,UAAU,EAAEL;AAJd,IADF;AAQD,CAvBD;;AAyBA,eAAeH,MAAf;AAEA,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,IAAI,EAAE,CAFF;AAGJC,IAAAA,MAAM,EAAE,CAHJ;AAIJC,IAAAA,YAAY,EAAE,EAJV;AAKJC,IAAAA,OAAO,EAAE,EALL;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE;AAPZ,GADyB;AAU/BZ,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAE,OADH;AAEJc,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR;AAVyB,CAAlB,CAAf","sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, TouchableNativeFeedback, View } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport { myQuiz } from \"../../dummy-data/dashboard\";\r\n\r\nconst MyQuiz = (props) => {\r\n  const navigation = useNavigation();\r\n  const renderItem = ({ item }) => (\r\n    <TouchableNativeFeedback\r\n      onPress={() => {\r\n        navigation.navigate(\"Instructions\");\r\n      }}\r\n    >\r\n      <View style={{ ...styles.item, ...{ backgroundColor: item.color } }}>\r\n        <Text style={styles.text}>{item.subject}</Text>\r\n\r\n        <Text style={styles.text}>quiz {item.number}</Text>\r\n      </View>\r\n    </TouchableNativeFeedback>\r\n  );\r\n  return (\r\n    <FlatList\r\n      numColumns={2}\r\n      data={myQuiz}\r\n      keyExtractor={(Item) => Item.color}\r\n      renderItem={renderItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyQuiz;\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    height: 150,\r\n    flex: 1,\r\n    margin: 5,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}