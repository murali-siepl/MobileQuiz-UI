{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport Authenticate from \"./store/reducers/Authenticate\";\nvar rootReducer = combineReducers({\n  auth: Authenticate\n});\nvar store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nvar FetchFonts = function FetchFonts() {\n  return Font.loadAsync({\n    roboto: require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    \"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      FontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!FontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: FetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(AppNavigator, null));\n}","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/App.js"],"names":["React","useState","Font","AppLoading","AppNavigator","createStore","combineReducers","applyMiddleware","ReduxThunk","Provider","Authenticate","rootReducer","auth","store","FetchFonts","loadAsync","roboto","require","App","FontLoaded","setFontLoaded","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP;AACA,IAAMC,WAAW,GAAGL,eAAe,CAAC;AAClCM,EAAAA,IAAI,EAAEF;AAD4B,CAAD,CAAnC;AAGA,IAAMG,KAAK,GAAGR,WAAW,CAACM,WAAD,EAAcJ,eAAe,CAACC,UAAD,CAA7B,CAAzB;;AAEA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOZ,IAAI,CAACa,SAAL,CAAe;AACpBC,IAAAA,MAAM,EAAEC,OAAO,qCADK;AAEpB,mBAAeA,OAAO;AAFF,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAoCjB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEL,UADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMM,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA;AAHX,MADF;AAOD;;AACD,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER;AAAjB,KACE,oBAAC,YAAD,OADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Font from \"expo-font\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport AppNavigator from \"./navigation/AppNavigator\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport Authenticate from \"./store/reducers/Authenticate\";\r\nconst rootReducer = combineReducers({\r\n  auth: Authenticate,\r\n});\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\r\n\r\nconst FetchFonts = () => {\r\n  return Font.loadAsync({\r\n    roboto: require(\"./assets/fonts/Roboto-Regular.ttf\"),\r\n    \"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\r\n  });\r\n};\r\n\r\nexport default function App() {\r\n  const [FontLoaded, setFontLoaded] = useState(false);\r\n  if (!FontLoaded) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={FetchFonts}\r\n        onFinish={() => setFontLoaded(true)}\r\n        onError={(err) => console.log(err)}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <AppNavigator />\r\n    </Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}