{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from \"expo-constants\";\nimport { CountdownCircleTimer } from \"react-native-countdown-circle-timer\";\nexport default function Timer(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPlaying = _React$useState2[0],\n      setIsPlaying = _React$useState2[1];\n\n  return React.createElement(CountdownCircleTimer, {\n    isPlaying: isPlaying,\n    duration: props.duration,\n    colors: [[\"#004777\", 0.4], [\"#F7B801\", 0.4], [\"#A30000\", 0.2]],\n    onComplete: function onComplete() {\n      return [true];\n    },\n    size: 40,\n    strokeWidth: 6\n  }, function (_ref) {\n    var remainingTime = _ref.remainingTime,\n        animatedColor = _ref.animatedColor;\n    return React.createElement(Animated.Text, {\n      style: {\n        color: animatedColor,\n        fontSize: 15,\n        fontWeight: \"bold\"\n      }\n    }, remainingTime);\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/components/shared/Timer.js"],"names":["React","Constants","CountdownCircleTimer","Timer","props","useState","isPlaying","setIsPlaying","duration","remainingTime","animatedColor","color","fontSize","fontWeight","styles","StyleSheet","create"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,oBAAT,QAAqC,qCAArC;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,wBAAkCJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,SACE,oBAAC,oBAAD;AACE,IAAA,SAAS,EAAED,SADb;AAEE,IAAA,QAAQ,EAAEF,KAAK,CAACI,QAFlB;AAGE,IAAA,MAAM,EAAE,CACN,CAAC,SAAD,EAAY,GAAZ,CADM,EAEN,CAAC,SAAD,EAAY,GAAZ,CAFM,EAGN,CAAC,SAAD,EAAY,GAAZ,CAHM,CAHV;AAQE,IAAA,UAAU,EAAE;AAAA,aAAM,CAAC,IAAD,CAAN;AAAA,KARd;AASE,IAAA,IAAI,EAAE,EATR;AAUE,IAAA,WAAW,EAAE;AAVf,KAYG;AAAA,QAAGC,aAAH,QAAGA,aAAH;AAAA,QAAkBC,aAAlB,QAAkBA,aAAlB;AAAA,WACC,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,aAAT;AAAwBE,QAAAA,QAAQ,EAAE,EAAlC;AAAsCC,QAAAA,UAAU,EAAE;AAAlD;AADT,OAGGJ,aAHH,CADD;AAAA,GAZH,CADF;AAsBD;AAED,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, Animated, Button } from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport { CountdownCircleTimer } from \"react-native-countdown-circle-timer\";\r\n\r\nexport default function Timer(props) {\r\n  const [isPlaying, setIsPlaying] = React.useState(true);\r\n  return (\r\n    <CountdownCircleTimer\r\n      isPlaying={isPlaying}\r\n      duration={props.duration}\r\n      colors={[\r\n        [\"#004777\", 0.4],\r\n        [\"#F7B801\", 0.4],\r\n        [\"#A30000\", 0.2],\r\n      ]}\r\n      onComplete={() => [true]}\r\n      size={40}\r\n      strokeWidth={6}\r\n    >\r\n      {({ remainingTime, animatedColor }) => (\r\n        <Animated.Text\r\n          style={{ color: animatedColor, fontSize: 15, fontWeight: \"bold\" }}\r\n        >\r\n          {remainingTime}\r\n        </Animated.Text>\r\n      )}\r\n    </CountdownCircleTimer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}