{"ast":null,"code":"import React from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Input from \"./../shared/Input\";\nimport CustomButton from \"./../shared/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport signupValidationSchema from \"../../validationSchema/singup\";\nimport { signInOrUp } from \"./../../store/actions/Authenticate\";\nimport { ErrorMessage } from \"../shared/ErrorModal\";\n\nvar SignUp = function SignUp(props) {\n  var dispatch = useDispatch();\n  var loading = useSelector(function (state) {\n    return state.auth.loading;\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      location: \"\"\n    },\n    validationSchema: signupValidationSchema,\n    onSubmit: function onSubmit(values) {\n      dispatch(signInOrUp(values, \"signup\"));\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        errors = _ref.errors;\n    return React.createElement(View, {\n      style: styles.contaier\n    }, React.createElement(Input, {\n      holder: \"Enter  full name\",\n      name: \"fullName\",\n      onChangeText: handleChange(\"fullName\"),\n      onBlur: handleBlur(\"fullName\"),\n      value: values.fullName,\n      error: errors.fullName\n    }), errors.fullName && React.createElement(ErrorMessage, {\n      error: errors.fullName\n    }), React.createElement(Input, {\n      holder: \"Enter  email\",\n      name: \"email\",\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      value: values.email,\n      keyboardType: \"email-address\",\n      error: errors.email\n    }), errors.email && React.createElement(ErrorMessage, {\n      error: errors.email\n    }), React.createElement(Input, {\n      name: \"password\",\n      holder: \"Enter  password\",\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      value: values.password,\n      secureTextEntry: true,\n      error: errors.password\n    }), errors.password && React.createElement(ErrorMessage, {\n      error: errors.password\n    }), React.createElement(Input, {\n      name: \"confirmPassword\",\n      holder: \"Confirm password\",\n      onChangeText: handleChange(\"confirmPassword\"),\n      onBlur: handleBlur(\"confirmPassword\"),\n      value: values.confirmPassword,\n      error: errors.confirmPassword\n    }), errors.confirmPassword && React.createElement(ErrorMessage, {\n      error: errors.confirmPassword\n    }), React.createElement(Input, {\n      name: \"location\",\n      holder: \"Enter  location\",\n      onChangeText: handleChange(\"location\"),\n      onBlur: handleBlur(\"location\"),\n      value: values.location,\n      error: errors.location\n    }), errors.location && React.createElement(ErrorMessage, {\n      error: errors.location\n    }), loading ? React.createElement(ActivityIndicator, {\n      color: \"red\",\n      size: \"large\"\n    }) : React.createElement(CustomButton, {\n      touchWidth: \"80%\",\n      style: {\n        marginVertical: 15\n      },\n      onPress: handleSubmit\n    }, \"Register\"));\n  });\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  contaier: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/components/SignComponents/SignUp.js"],"names":["React","Input","CustomButton","useDispatch","useSelector","Formik","signupValidationSchema","signInOrUp","ErrorMessage","SignUp","props","dispatch","loading","state","auth","fullName","email","password","confirmPassword","location","values","handleChange","handleBlur","handleSubmit","errors","styles","contaier","marginVertical","StyleSheet","create","alignItems","justifyContent","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ActivityIndicator, StyleSheet, Text, View } from \"react-native\";\r\nimport Input from \"./../shared/Input\";\r\nimport CustomButton from \"./../shared/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport signupValidationSchema from \"../../validationSchema/singup\";\r\nimport { signInOrUp } from \"./../../store/actions/Authenticate\";\r\nimport { ErrorMessage } from \"../shared/ErrorModal\";\r\n\r\nconst SignUp = (props) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.auth.loading);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        location: \"\",\r\n      }}\r\n      validationSchema={signupValidationSchema}\r\n      onSubmit={(values) => {\r\n        dispatch(signInOrUp(values, \"signup\"));\r\n      }}\r\n    >\r\n      {({ handleChange, handleBlur, handleSubmit, values, errors }) => (\r\n        <View style={styles.contaier}>\r\n          <Input\r\n            holder=\"Enter  full name\"\r\n            name=\"fullName\"\r\n            onChangeText={handleChange(\"fullName\")}\r\n            onBlur={handleBlur(\"fullName\")}\r\n            value={values.fullName}\r\n            error={errors.fullName}\r\n          />\r\n          {errors.fullName && <ErrorMessage error={errors.fullName} />}\r\n\r\n          <Input\r\n            holder=\"Enter  email\"\r\n            name=\"email\"\r\n            onChangeText={handleChange(\"email\")}\r\n            onBlur={handleBlur(\"email\")}\r\n            value={values.email}\r\n            keyboardType=\"email-address\"\r\n            error={errors.email}\r\n          />\r\n          {errors.email && <ErrorMessage error={errors.email} />}\r\n          <Input\r\n            name=\"password\"\r\n            holder=\"Enter  password\"\r\n            onChangeText={handleChange(\"password\")}\r\n            onBlur={handleBlur(\"password\")}\r\n            value={values.password}\r\n            secureTextEntry\r\n            error={errors.password}\r\n          />\r\n          {errors.password && <ErrorMessage error={errors.password} />}\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            holder=\"Confirm password\"\r\n            onChangeText={handleChange(\"confirmPassword\")}\r\n            onBlur={handleBlur(\"confirmPassword\")}\r\n            value={values.confirmPassword}\r\n            error={errors.confirmPassword}\r\n          />\r\n          {errors.confirmPassword && (\r\n            <ErrorMessage error={errors.confirmPassword} />\r\n          )}\r\n          <Input\r\n            name=\"location\"\r\n            holder=\"Enter  location\"\r\n            onChangeText={handleChange(\"location\")}\r\n            onBlur={handleBlur(\"location\")}\r\n            value={values.location}\r\n            error={errors.location}\r\n          />\r\n          {errors.location && <ErrorMessage error={errors.location} />}\r\n          {loading ? (\r\n            <ActivityIndicator color=\"red\" size=\"large\" />\r\n          ) : (\r\n            <CustomButton\r\n              touchWidth=\"80%\"\r\n              style={{ marginVertical: 15 }}\r\n              onPress={handleSubmit}\r\n            >\r\n              Register\r\n            </CustomButton>\r\n          )}\r\n        </View>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n\r\nconst styles = StyleSheet.create({\r\n  contaier: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}