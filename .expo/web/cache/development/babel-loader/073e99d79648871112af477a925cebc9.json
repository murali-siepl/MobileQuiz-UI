{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DrawerStack from \"./DrawerNavigation\";\nimport NonAuthStack from \"./stacks/NonAuthStack\";\nimport LoadingScreen from \"./../screens/LoadingScreen\";\nexport default AppNavigator = function AppNavigator() {\n  var isAuth = useSelector(function (state) {\n    return !!state.auth.token;\n  });\n  var didtry = useSelector(function (state) {\n    return state.auth.didTryLogin;\n  });\n  return React.createElement(NavigationContainer, null, isAuth && React.createElement(DrawerStack, null), !isAuth && didtry && React.createElement(NonAuthStack, null), !isAuth && !didtry && React.createElement(LoadingScreen, null));\n};","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/navigation/AppNavigator.js"],"names":["NavigationContainer","React","useSelector","DrawerStack","NonAuthStack","LoadingScreen","AppNavigator","isAuth","state","auth","token","didtry","didTryLogin"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AAEA,eAAeC,YAAY,GAAG,wBAAM;AAClC,MAAMC,MAAM,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAW,CAAC,CAACA,KAAK,CAACC,IAAN,CAAWC,KAAxB;AAAA,GAAD,CAA1B;AACA,MAAMC,MAAM,GAAGT,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWG,WAAtB;AAAA,GAAD,CAA1B;AACA,SACE,oBAAC,mBAAD,QACGL,MAAM,IAAI,oBAAC,WAAD,OADb,EAEG,CAACA,MAAD,IAAWI,MAAX,IAAqB,oBAAC,YAAD,OAFxB,EAGG,CAACJ,MAAD,IAAW,CAACI,MAAZ,IAAsB,oBAAC,aAAD,OAHzB,CADF;AAOD,CAVD","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DrawerStack from \"./DrawerNavigation\";\r\nimport NonAuthStack from \"./stacks/NonAuthStack\";\r\nimport LoadingScreen from \"./../screens/LoadingScreen\";\r\n\r\nexport default AppNavigator = () => {\r\n  const isAuth = useSelector((state) => !!state.auth.token);\r\n  const didtry = useSelector((state) => state.auth.didTryLogin);\r\n  return (\r\n    <NavigationContainer>\r\n      {isAuth && <DrawerStack />}\r\n      {!isAuth && didtry && <NonAuthStack />}\r\n      {!isAuth && !didtry && <LoadingScreen />}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}