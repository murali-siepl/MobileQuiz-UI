{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Input = function Input(props) {\n  console.log(\"data\", props);\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {\n      borderColor: props.error ? \"red\" : \"white\",\n      borderWidth: 1,\n      width: props.setWidth ? props.setWidth : \"80%\"\n    })\n  }, React.createElement(TextInput, _extends({}, props, {\n    style: _objectSpread(_objectSpread({}, styles.input), props.style),\n    placeholder: props.holder\n  })));\n};\n\nexport default Input;\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 5,\n    marginBottom: 10,\n    overflow: \"hidden\",\n    shadowColor: \"black\",\n    elevation: 10,\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowOpacity: 1\n  },\n  input: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    fontSize: 17\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/components/shared/Input.js"],"names":["React","Input","props","console","log","styles","container","borderColor","error","borderWidth","width","setWidth","input","style","holder","StyleSheet","create","borderRadius","marginBottom","overflow","shadowColor","elevation","shadowOffset","height","shadowOpacity","backgroundColor","paddingVertical","paddingHorizontal","fontSize"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAApB;AACA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAG,MAAM,CAACC,SADP,GAEA;AACDC,MAAAA,WAAW,EAAEL,KAAK,CAACM,KAAN,GAAc,KAAd,GAAsB,OADlC;AAEDC,MAAAA,WAAW,EAAE,CAFZ;AAGDC,MAAAA,KAAK,EAAER,KAAK,CAACS,QAAN,GAAiBT,KAAK,CAACS,QAAvB,GAAkC;AAHxC,KAFA;AADP,KAUE,oBAAC,SAAD,eACMT,KADN;AAEE,IAAA,KAAK,kCACAG,MAAM,CAACO,KADP,GAEAV,KAAK,CAACW,KAFN,CAFP;AAME,IAAA,WAAW,EAAEX,KAAK,CAACY;AANrB,KAVF,CADF;AAqBD,CAvBD;;AAyBA,eAAeb,KAAf;AAEA,IAAMI,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,YAAY,EAAE,CADL;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,QAAQ,EAAE,QAHD;AAITC,IAAAA,WAAW,EAAE,OAJJ;AAKTC,IAAAA,SAAS,EAAE,EALF;AAMTC,IAAAA,YAAY,EAAE;AAAEZ,MAAAA,KAAK,EAAE,EAAT;AAAaa,MAAAA,MAAM,EAAE;AAArB,KANL;AAOTC,IAAAA,aAAa,EAAE;AAPN,GADoB;AAU/BZ,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,MADF;AAELe,IAAAA,eAAe,EAAE,OAFZ;AAGLC,IAAAA,eAAe,EAAE,CAHZ;AAILC,IAAAA,iBAAiB,EAAE,EAJd;AAKLC,IAAAA,QAAQ,EAAE;AALL;AAVwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, TextInput, View } from \"react-native\";\r\n\r\nconst Input = (props) => {\r\n  console.log(\"data\", props);\r\n  return (\r\n    <View\r\n      style={{\r\n        ...styles.container,\r\n        ...{\r\n          borderColor: props.error ? \"red\" : \"white\",\r\n          borderWidth: 1,\r\n          width: props.setWidth ? props.setWidth : \"80%\",\r\n        },\r\n      }}\r\n    >\r\n      <TextInput\r\n        {...props}\r\n        style={{\r\n          ...styles.input,\r\n          ...props.style,\r\n        }}\r\n        placeholder={props.holder}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    overflow: \"hidden\",\r\n    shadowColor: \"black\",\r\n    elevation: 10,\r\n    shadowOffset: { width: 10, height: 10 },\r\n    shadowOpacity: 1,\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 20,\r\n    fontSize: 17,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}