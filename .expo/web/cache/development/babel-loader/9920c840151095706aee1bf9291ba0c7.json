{"ast":null,"code":"import * as yup from \"yup\";\nvar loginValidationSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  password: yup.string().min(3, function (_ref) {\n    var min = _ref.min;\n    return \"Password must be at least \" + min + \" characters\";\n  }).required(\"Password is required\")\n});\nexport default loginValidationSchema;\nexport var ForgetValidationSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\")\n});\nexport var ResetValidationSchema = yup.object().shape({\n  token: yup.string().required(\"Email Address is Required\"),\n  password: yup.string().min(3, function (_ref2) {\n    var min = _ref2.min;\n    return \"Password must be at least \" + min + \" characters\";\n  }).required(\"Password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords mush match\").required(\"Password is required\")\n});\nResetValidationSchema;","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/validationSchema/Login.js"],"names":["yup","loginValidationSchema","object","shape","email","string","required","password","min","ForgetValidationSchema","ResetValidationSchema","token","confirmPassword","oneOf","ref"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,IAAMC,qBAAqB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC/CC,EAAAA,KAAK,EAAEJ,GAAG,CACPK,MADI,GAEJD,KAFI,CAEE,0BAFF,EAGJE,QAHI,CAGK,2BAHL,CADwC;AAK/CC,EAAAA,QAAQ,EAAEP,GAAG,CACVK,MADO,GAEPG,GAFO,CAEH,CAFG,EAEA;AAAA,QAAGA,GAAH,QAAGA,GAAH;AAAA,0CAA0CA,GAA1C;AAAA,GAFA,EAGPF,QAHO,CAGE,sBAHF;AALqC,CAAnB,CAA9B;AAUA,eAAeL,qBAAf;AACA,OAAO,IAAMQ,sBAAsB,GAAGT,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACvDC,EAAAA,KAAK,EAAEJ,GAAG,CACPK,MADI,GAEJD,KAFI,CAEE,0BAFF,EAGJE,QAHI,CAGK,2BAHL;AADgD,CAAnB,CAA/B;AAOP,OAAO,IAAMI,qBAAqB,GAAGV,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACtDQ,EAAAA,KAAK,EAAEX,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAD+C;AAEtDC,EAAAA,QAAQ,EAAEP,GAAG,CACVK,MADO,GAEPG,GAFO,CAEH,CAFG,EAEA;AAAA,QAAGA,GAAH,SAAGA,GAAH;AAAA,0CAA0CA,GAA1C;AAAA,GAFA,EAGPF,QAHO,CAGE,sBAHF,CAF4C;AAMtDM,EAAAA,eAAe,EAAEZ,GAAG,CACjBK,MADc,GAEdQ,KAFc,CAER,CAACb,GAAG,CAACc,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFQ,EAEqB,sBAFrB,EAGdR,QAHc,CAGL,sBAHK;AANqC,CAAnB,CAA9B;AAWPI,qBAAqB","sourcesContent":["import * as yup from \"yup\";\r\n\r\nconst loginValidationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email Address is Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(3, ({ min }) => `Password must be at least ${min} characters`)\r\n    .required(\"Password is required\"),\r\n});\r\nexport default loginValidationSchema;\r\nexport const ForgetValidationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email Address is Required\"),\r\n});\r\n\r\nexport const ResetValidationSchema = yup.object().shape({\r\n  token: yup.string().required(\"Email Address is Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(3, ({ min }) => `Password must be at least ${min} characters`)\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords mush match\")\r\n    .required(\"Password is required\"),\r\n});\r\nResetValidationSchema;\r\n"]},"metadata":{},"sourceType":"module"}