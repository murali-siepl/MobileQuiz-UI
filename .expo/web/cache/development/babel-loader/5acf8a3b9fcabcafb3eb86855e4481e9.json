{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { achiement } from \"../../dummy-data/dashboard\";\n\nvar renderItem = function renderItem(itemData) {\n  return React.createElement(TouchableNativeFeedback, null, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.item), {\n      backgroundColor: itemData.item.color\n    })\n  }, React.createElement(Text, {\n    style: styles.title\n  }, itemData.item.title), React.createElement(View, {\n    style: styles.data\n  }, React.createElement(View, {\n    style: styles.rating\n  }, new Array(itemData.item.rating).fill(\"\").map(function (_, i) {\n    return React.createElement(Ionicons, {\n      style: styles.icon,\n      name: \"ios-star\",\n      color: \"orange\",\n      key: i,\n      size: 29\n    });\n  })), React.createElement(Text, {\n    style: styles.score\n  }, \"+\", itemData.item.score))));\n};\n\nvar Achievement = function Achievement() {\n  return React.createElement(FlatList, {\n    data: achiement,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    renderItem: renderItem\n  });\n};\n\nexport default Achievement;\nvar styles = StyleSheet.create({\n  item: {\n    flex: 1,\n    padding: 20,\n    borderRadius: 6,\n    paddingLeft: 30,\n    marginVertical: 5\n  },\n  title: {\n    color: \"white\",\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  data: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  rating: {\n    marginTop: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  icon: {\n    marginRight: 8\n  },\n  score: {\n    color: \"orange\",\n    fontSize: 23,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/MobileQuiz-UI/components/DashboardComponents/Achievement.js"],"names":["Ionicons","React","achiement","renderItem","itemData","styles","item","backgroundColor","color","title","data","rating","Array","fill","map","_","i","icon","score","Achievement","StyleSheet","create","flex","padding","borderRadius","paddingLeft","marginVertical","fontSize","fontWeight","flexDirection","justifyContent","marginTop","marginRight"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,SAAT;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD;AAAA,SACjB,oBAAC,uBAAD,QACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCAAOC,MAAM,CAACC,IAAd,GAAuB;AAAEC,MAAAA,eAAe,EAAEH,QAAQ,CAACE,IAAT,CAAcE;AAAjC,KAAvB;AADP,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KAA4BL,QAAQ,CAACE,IAAT,CAAcG,KAA1C,CAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,KACG,IAAIC,KAAJ,CAAUR,QAAQ,CAACE,IAAT,CAAcK,MAAxB,EAAgCE,IAAhC,CAAqC,EAArC,EAAyCC,GAAzC,CAA6C,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAC5C,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEX,MAAM,CAACY,IADhB;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,GAAG,EAAED,CAJP;AAKE,MAAA,IAAI,EAAE;AALR,MAD4C;AAAA,GAA7C,CADH,CADF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACa;AAApB,UAA6Bd,QAAQ,CAACE,IAAT,CAAcY,KAA3C,CAZF,CAJF,CADF,CADiB;AAAA,CAAnB;;AAwBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEjB,SADR;AAEE,IAAA,YAAY,EAAE,sBAACI,IAAD;AAAA,aAAUA,IAAI,CAACG,KAAf;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAEN;AAHd,IADF;AAOD,CARD;;AAUA,eAAegB,WAAf;AAEA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,WAAW,EAAE,EAJT;AAKJC,IAAAA,cAAc,EAAE;AALZ,GADyB;AAQ/BjB,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE,OADF;AAELmB,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE;AAHP,GARwB;AAa/BlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,cAAc,EAAE;AAFZ,GAbyB;AAiB/BnB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,SAAS,EAAE,EADL;AAENF,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,cAAc,EAAE;AAHV,GAjBuB;AAsB/Bb,EAAAA,IAAI,EAAE;AACJe,IAAAA,WAAW,EAAE;AADT,GAtByB;AAyB/Bd,EAAAA,KAAK,EAAE;AACLV,IAAAA,KAAK,EAAE,QADF;AAELmB,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE;AAHP;AAzBwB,CAAlB,CAAf","sourcesContent":["import { Ionicons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport {\r\n  FlatList,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableNativeFeedback,\r\n  View,\r\n} from \"react-native\";\r\nimport { achiement } from \"../../dummy-data/dashboard\";\r\n\r\nconst renderItem = (itemData) => (\r\n  <TouchableNativeFeedback>\r\n    <View\r\n      style={{ ...styles.item, ...{ backgroundColor: itemData.item.color } }}\r\n    >\r\n      <Text style={styles.title}>{itemData.item.title}</Text>\r\n      <View style={styles.data}>\r\n        <View style={styles.rating}>\r\n          {new Array(itemData.item.rating).fill(\"\").map((_, i) => (\r\n            <Ionicons\r\n              style={styles.icon}\r\n              name=\"ios-star\"\r\n              color=\"orange\"\r\n              key={i}\r\n              size={29}\r\n            />\r\n          ))}\r\n        </View>\r\n        <Text style={styles.score}>+{itemData.item.score}</Text>\r\n      </View>\r\n    </View>\r\n  </TouchableNativeFeedback>\r\n);\r\n\r\nconst Achievement = () => {\r\n  return (\r\n    <FlatList\r\n      data={achiement}\r\n      keyExtractor={(item) => item.title}\r\n      renderItem={renderItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Achievement;\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    flex: 1,\r\n    padding: 20,\r\n    borderRadius: 6,\r\n    paddingLeft: 30,\r\n    marginVertical: 5,\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n  },\r\n  data: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rating: {\r\n    marginTop: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  icon: {\r\n    marginRight: 8,\r\n  },\r\n  score: {\r\n    color: \"orange\",\r\n    fontSize: 23,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}